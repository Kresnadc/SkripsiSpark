[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:9:38: object BLAS in package linalg cannot be accessed in package org.apache.spark.mllib.linalg[0m
[0m[[0m[31merror[0m] [0m[0mimport org.apache.spark.mllib.linalg.BLAS.{axpy, scal}[0m
[0m[[0m[31merror[0m] [0m[0m                                     ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:30:68: object Utils in package util cannot be accessed in package org.apache.spark.util[0m
[0m[[0m[31merror[0m] [0m[0m  def this() = this(2, 20, CustomKMeans.K_MEANS_PARALLEL, 2, 1e-4, Utils.random.nextLong())[0m
[0m[[0m[31merror[0m] [0m[0m                                                                   ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:157:34: class Instrumentation in package util cannot be accessed in package org.apache.spark.ml.util[0m
[0m[[0m[31merror[0m] [0m[0m                   instr: Option[Instrumentation[NewKMeans]]): KMeansModel = {[0m
[0m[[0m[31merror[0m] [0m[0m                                 ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:186:43: not found: type Instrumentation[0m
[0m[[0m[31merror[0m] [0m[0m                            instr: Option[Instrumentation[NewKMeans]]): KMeansModel = {[0m
[0m[[0m[31merror[0m] [0m[0m                                          ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:230:11: not found: value axpy[0m
[0m[[0m[31merror[0m] [0m[0m          axpy(1.0, point.vector, sum)[0m
[0m[[0m[31merror[0m] [0m[0m          ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:236:9: not found: value axpy[0m
[0m[[0m[31merror[0m] [0m[0m        axpy(1.0, sum2, sum1)[0m
[0m[[0m[31merror[0m] [0m[0m        ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:237:25: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Any[0m
[0m[[0m[31merror[0m] [0m[0m required: String[0m
[0m[[0m[31merror[0m] [0m[0m        (sum1, count1 + count2)[0m
[0m[[0m[31merror[0m] [0m[0m                        ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:239:9: not found: value scal[0m
[0m[[0m[31merror[0m] [0m[0m        scal(1.0 / count, sum)[0m
[0m[[0m[31merror[0m] [0m[0m        ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:239:18: overloaded method value / with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Double)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Float)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Long)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Int)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Char)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Short)Double <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x: Byte)Double[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (Any)[0m
[0m[[0m[31merror[0m] [0m[0m        scal(1.0 / count, sum)[0m
[0m[[0m[31merror[0m] [0m[0m                 ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:243:24: too many arguments for method destroy: ()Unit[0m
[0m[[0m[31merror[0m] [0m[0m      bcCenters.destroy(blocking = false)[0m
[0m[[0m[31merror[0m] [0m[0m                       ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:278:35: class XORShiftRandom in package random cannot be accessed in package org.apache.spark.util.random[0m
[0m[[0m[31merror[0m] [0m[0m    data.takeSample(false, k, new XORShiftRandom(this.seed).nextInt())[0m
[0m[[0m[31merror[0m] [0m[0m                                  ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:296:20: not found: type XORShiftRandom[0m
[0m[[0m[31merror[0m] [0m[0m    val seed = new XORShiftRandom(this.seed).nextInt()[0m
[0m[[0m[31merror[0m] [0m[0m                   ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:323:24: not found: type XORShiftRandom[0m
[0m[[0m[31merror[0m] [0m[0m        val rand = new XORShiftRandom(seed ^ (step << 16) ^ index)[0m
[0m[[0m[31merror[0m] [0m[0m                       ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:332:39: too many arguments for method destroy: ()Unit[0m
[0m[[0m[31merror[0m] [0m[0m    bcNewCentersList.foreach(_.destroy(false))[0m
[0m[[0m[31merror[0m] [0m[0m                                      ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:343:31: not found: value KMeans[0m
[0m[[0m[31merror[0m] [0m[0m      val countMap = data.map(KMeans.findClosest(bcCenters.value, _)._1).countByValue()[0m
[0m[[0m[31merror[0m] [0m[0m                              ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:345:24: too many arguments for method destroy: ()Unit[0m
[0m[[0m[31merror[0m] [0m[0m      bcCenters.destroy(blocking = false)[0m
[0m[[0m[31merror[0m] [0m[0m                       ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Kresna\IdeaProjects\SparkMLlibTest\src\main\scala\CustomKMeans.scala:348:7: not found: value LocalKMeans[0m
[0m[[0m[31merror[0m] [0m[0m      LocalKMeans.kMeansPlusPlus(0, distinctCenters.toArray, myWeights, k, 30)[0m
[0m[[0m[31merror[0m] [0m[0m      ^[0m
